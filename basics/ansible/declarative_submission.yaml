---

- name: Declaratively process Service Items
  hosts: localhost
  gather_facts: false
  vars:
    service_name: "SERVICE_NAME"
    netorca_provider:
      url:  "{{ netorca_url }}"
      api_key: "{{ netorca_api_key }}"
  tasks:
    - name: Get APPROVED Change Instances
      netautomate.netorca.get_change_instances:
        url: "{{ netorca_provider.url }}"
        api_key: "{{ netorca_provider.api_key }}"
        context: "serviceowner"
        filters:
          service_name: "{{ service_name }}"
          state: "APPROVED"
      register: approved_change_instances

    - name: No Change Instances to deploy...
      meta: end_play
      when: approved_change_instances.change_instances.results | length == 0

    - name: Get All Service Items
      netautomate.netorca.get_service_items:
        url: "{{ netorca_provider.url }}"
        api_key: "{{ netorca_provider.api_key }}"
        context: serviceowner
        filters:
          service_name: "{{ service_name }}"
          runtime_state: IN_SERVICE
      register: service_items

    ### Call examples ansible block here:

    - name: Include examples deployment
      ansible.builtin.import_playbook: ./examples/f5_virtual_servers/virtual_server_deploy.yaml

    ### examples logic ends
    
    - name: UPDATE CHANGE INSTANCE RECORDS BASED ON DEPLOYMENT RESULTS
      netautomate.netorca.update_change_instances:
        url: "{{ netorca_provider.url }}"
        api_key: "{{ netorca_provider.api_key }}"
        context: serviceowner
        id: "{{ item.id }}"
        state: "COMPLETED"
        deployed_item:
          field: "value"
      loop: "{{ approved_change_instances.change_instances.results }}"